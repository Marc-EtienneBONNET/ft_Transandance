
--> partie Marc
- Interafce utilisateur (front-end) du jeux pong ainsi que d autre jeux de notre choix 
	- stable sur google Firefox et safarie
	- doit etre sur un seul page
	- framework de notre choix
	- les jeux doivre etre : 
		- les utilisateurs doivent pouvoir jouer à un jeu Pong en direct contre un autre joueur directement sur le site Web.
		- Il doit y avoir un système de matchmaking.
		- Vous devez proposer certaines options de personnalisation (par exemple, des bonus ou des cartes différentes). Cependant, l'utilisateur devrait pouvoir sélectionner une version par défaut du jeu sans aucune fonctionnalité supplémentaire s'il le souhaite.
		- Le jeu doit être réactif !
		- L'utilisateur doit pouvoir regarder une partie en direct entre d'autres utilisateurs sans interférer avec celle-ci.
	- Utilisateur : 
		-doit se connecter en utilisant le système OAuth de 42 intranet.
		-doit pouvoir choisir un nom unique qui sera affiché sur le
		site Internet.
		-doit pouvoir télécharger un avatar. Si l'utilisateur ne télécharge pas d'avatar, un avatar par défaut doit être défini.
		-doit pouvoir activer l'authentification à deux facteurs. Par exemple, Google Authenticator ou l'envoi d'un SMS sur leur téléphone.
		-doit pouvoir ajouter d'autres utilisateurs en tant qu'amis et voir leur statut actuel (en ligne, hors ligne, dans un jeu, etc.).
		-Les statistiques (telles que : les victoires et les défaites, le niveau du classement, les réalisations, etc.) doivent être affichées sur le profil de l'utilisateur.
		-Chaque utilisateur doit avoir un historique des matchs comprenant les parties 1 contre 1, le classement et tout autre élément utile. Toute personne connectée doit pouvoir la consulter.

----> partie Marco 
- Ceation d'un back-end en nodeJS
	- les donner a retenir : 
		- utilisateur
			- option de personnalisation 
			- nom 
			- mot de passe
			- avatar 
			- liste d amis
			- les statistique du joueur
				- nb victoire 
				- nb deffaite 
				- classement
			- historique du joueur 
				- score des match 
				- nom des adrversaire
				- classement de la partie
			- sa liste de channel
				- sont status sur chaque channel
		- liste des channel 
			- utilisateur sur chaque channel
				- et leur droit 
			- status du channel 
			- mot de passe
- Mise en place des container
	- docker en mode rootless
	- fichier d'execution docker doive aller dans le goinfre ou sgoindre
	- format des container : 
		- container 1 base de donner : PostgreSQL
		- container 2 pour fair tourner le front du site 
		- container 3 nginx



--> restant 
- un chat (mini irc)
	-L'utilisateur doit pouvoir créer des canaux soit : 
		- publics
		- privés
		- protégés par un mot de passe.
	-L'utilisateur qui a créé un nouveau canal est automatiquement défini comme propriétaire du canal jusqu'à ce qu'il le quitte.
	-Le propriétaire du canal peut définir un mot de passe requis pour accéder au canal, le modifier et également le supprimer.
	-Le propriétaire du canal est un administrateur de canal. Ils peuvent définir d'autres utilisateurs comme administrateurs.
	-Les administrateurs d'un canal peuvent bannir ou mettre en sourdine des utilisateurs pour une durée limitée.
	-L'utilisateur doit pouvoir envoyer des messages directs à d'autres utilisateurs.
	-L'utilisateur doit pouvoir bloquer d'autres utilisateurs.
	-L'utilisateur doit pouvoir inviter d'autres utilisateurs à jouer à un jeu Pong via le chat
	interface.
	-L'utilisateur doit pouvoir accéder aux profils des autres joueurs via l'interface de chat.


- securier
	- Tout mot de passe stocké dans votre base de données doit être haché.
	- Votre site web doit être protégé contre les injections SQL.
	- Vous devez implémenter une sorte de validation côté serveur pour les formulaires et toute entrée utilisateur.
	- algoritme de hachage des mot de passe fort